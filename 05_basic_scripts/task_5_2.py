# -*- coding: utf-8 -*-
"""
Задание 5.2

Запросить у пользователя ввод IP-сети в формате: 10.1.1.0/24

Затем вывести информацию о сети и маске в таком формате:

Network:
10        1         1         0
00001010  00000001  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000

Проверить работу скрипта на разных комбинациях сеть/маска.

Вывод сети и маски должен быть упорядочен также, как в примере:
- столбцами
- ширина столбца 10 символов (в двоичном формате
  надо добавить два пробела между столбцами
  для разделения октетов между собой)

Подсказка: Получить маску в двоичном формате можно так:
In [1]: "1" * 28 + "0" * 4
Out[1]: '11111111111111111111111111110000'


Ограничение: Все задания надо выполнять используя только пройденные темы.
"""

stock_ip = input("IP адрес вида ххх.ххх.ххх.ххх/уу ").replace("/", ".").split(".")
mask = "1" * int(stock_ip[4]) + "0" * (32 - int(stock_ip[4]))
mask_list = [mask[0:8], mask[8:16], mask[16:24], mask[24:32]]
ip_format = '''{:<8} {:<8} {:<8} {:<8}
{:<08b} {:<08b} {:<08b} {:<08b}
'''
      
mask_format = '''
{}
{:<8} {:<8} {:<8} {:<8}
{:<8} {:<8} {:<8} {:<8}
'''

print("Network:")
print(ip_format.format(int(stock_ip[0]), int(stock_ip[1]), int(stock_ip[2]), int(stock_ip[3]),int(stock_ip[0]), int(stock_ip[1]), int(stock_ip[2]), int(stock_ip[3])))
print("Mask:")
print(mask_format.format("/" + stock_ip[4], int(mask_list[0], 2), int(mask_list[1], 2), int(mask_list[2], 2), int(mask_list[3], 2), mask_list[0], mask_list[1], mask_list[2], mask_list[3]))